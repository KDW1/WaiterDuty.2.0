<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>WaiterDuty.2.0</title>
    <%- include('./header') %>
</head>
<body class="bg-orange-500">
    <p class="text-center text-white font-semibold text-5xl mt-4" id="roster">Roster:</p>
    <p class="relative boxShadow hover:scale-105 transition-all delay-200 duration-500 text-amber-400 hover:text-orange-400 mt-4 w-min min-w-max px-4 py-2 mx-auto text-center font-semibold text-lg cursor-pointer">
        <a href="/">
            Back Home
        </a>
    </p>
    <p  class="text-center text-white font-semibold text-2xl mt-8" id="percent">
        <%= Intl.NumberFormat('default', {
            style: 'percent',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
          }).format(locals.roster.attendancePercent); %> Attendance
    </p>
    <p  class="text-center text-white font-semibold text-2xl mt-2" id="dayPercent">
        
    </p>
    <p class="text-rose-700 font-bold text-lg mt-2 text-center hidden" id="minWarning">
        *Doesn't meet minimum
    </p>
    <div class="hidden"></div>
    <div class="grid gap-2 grid-cols-3 w-2/3 mt-6 mx-auto">
        <div id="rosters" class="text-center pb-5 col-span-2 px-4">
            <% shiftType = "text-sm font-semibold text-start" %>
            <% nameType = "name text-start text-base" %> 
            <% for(let i = 0; i < 5; i++) { %>
                <% let days = ['mon', 'tue', 'wed', 'thurs', 'fri'] %> 
                <% let daysFull = ['monday', 'tuesday', 'wednesday', 'thursday', 'friday'] %> 
                <div id="<%=days[i]%>Table" class="boxShadow mb-6 px-6 py-6 mx-auto">
                    <p class="text-2xl underline underline-offset-4 decoration-4 decoration-stone-200 font-semibold text-center"><%= daysFull[i].charAt(0).toUpperCase() + daysFull[i].slice(1) %> Schedule</p>
                    <table class="mx-auto table-auto w-full border-separate">
                            <% data = roster[daysFull[i]] %> 
                            <% function iterateShifts(arr) {
                                let terms = [];
                                terms = arr.map((data) => {
                                    return data;
                                })
                                return terms;
                            } %> 
                            <tr class="w-1/2">
                                <p class="pt-4 <%= shiftType %>">Breakfast</p>
                                <% iterateShifts(data.breakfast).map((data) => { %>
                                    <p><%= data.attended %></p>
                                <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 1)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                    <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                    <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                        <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                    </svg>
                                </div>
                            <% });%>
                            </tr>
                            <% if(i != 2) { %>
                                <tr><p class="pt-4 <%= shiftType %> ">1st Lunch</p><% iterateShifts(data.lunches.firstLunch).map((data) => { %>
                                    <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                    <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 2, 1)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                        <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                        <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                            <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                            <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                        </svg>
                                    </div>                                <% });%></tr>
                                <tr><p class="pt-4 <%= shiftType %> ">2nd Lunch</p><% iterateShifts(data.lunches.secondLunch).map((data) => { %>
                                    <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                    <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 2, 2)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                        <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                        <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                            <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                            <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                        </svg>
                                    </div>                                <% });%></tr>
                                <tr><p class="pt-4 <%= shiftType %> ">3rd Lunch</p><% iterateShifts(data.lunches.thirdLunch).map((data) => { %>
                                    <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                    <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 2, 3)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                        <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                        <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                            <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                            <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                        </svg>
                                    </div>                                <% });%></tr>
                            <% } else { %>
                                <tr><p class="pt-4 <%= shiftType %> ">Lunch</p><% iterateShifts(data.wednesday).map((data) => { %>
                                    <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                    <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 2)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                        <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                        <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                            <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                            <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                        </svg>
                                    </div>                                <% });%></tr>
                            <% } %>   
                            <tr><p class="pt-4 <%= shiftType %> ">1st Dinner</p><% iterateShifts(data.dinners.firstDinner).map((data) => { %>
                                <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 3, 1)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                    <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                    <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                        <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                    </svg>
                                </div>                            <% });%></tr>
                            <tr><p class="pt-4 <%= shiftType %> ">2nd Dinner</p><% iterateShifts(data.dinners.secondDinner).map((data) => { %>
                                <% let percentColor = (data.attended) ? 'bg-green-300' : 'bg-red-300' %>
                                <div onclick="changeAttendance(this, '<%=daysFull[i]%>', 3, 2)" class="flex w-full mt-2 px-2 py-1 <%= percentColor %> rounded-md">
                                    <div id="name" class="<%= nameType %>"><%= data.assignedPerson %></div>
                                    <svg class="fill-white h-5 ml-auto" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <!--! Font Awesome Pro 6.3.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                                        <path d="M470.6 105.4c12.5 12.5 12.5 32.8 0 45.3l-256 256c-12.5 12.5-32.8 12.5-45.3 0l-128-128c-12.5-12.5-12.5-32.8 0-45.3s32.8-12.5 45.3 0L192 338.7 425.4 105.4c12.5-12.5 32.8-12.5 45.3 0z"/>
                                    </svg>
                                </div>                            <% });%></tr>
                    </table>
                </div>
            <% } %>  
        </div>
        <div class="col-span-1">
            <select id="days" class="px-2 py-2 rounded-md w-full h-min">
                <option selected value="nan">No Day Selected</option>
                <option value="mon">Monday</option>
                <option value="tue">Tuesday</option>
                <option value="wed">Wednesday</option>
                <option value="thurs">Thursday</option>
                <option value="fri">Friday</option>
            </select>
            <div class="flex-col text-white font-lg font-bold">
                Minimum Attendance:
                <div>
                    <input value="80" max="100" min="0" class="mt-2 bg-transparent border-b-2 border-white outline-none w-1/2 lg:w-1/5" type="number" name="minimumPer" id="minimumPer">
                    %
                </div>
            </div>
        </div>
        <div class="text-rose-700 hidden"></div>
    </div>
    <script src="jquery-3.6.1.min.js"></script>
    <script>   
    let date = new Date();
    console.log(date.getDate()); 
    //Range of 1-
    let days = ['mon', 'tue', 'wed', 'thurs', 'fri'];
    let daysFull = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday'];
    let selectElem = document.getElementById("days");
    let roster = '<%=JSON.stringify(locals.roster)%>'.replaceAll('&#34;', '\"');
    let currentDay = '';
    let minimum = 0;
    roster = JSON.parse(roster); 
    console.log("Roster: ")
    console.log(roster)
    if(date.getDate() <= 4) {
        console.log(days[date.getDate()]);
    }

    document.getElementById("minimumPer").addEventListener('input', (e) => {
        let value = document.getElementById("minimumPer").value;
        if(value < 0) {
            document.getElementById("minimumPer").value = 0;
        } else if(value > 100) {
            document.getElementById("minimumPer").value = 100;
        }
        let overallPercent = roster.attendancePercent;
        minimum = value/100;
        changeWarning(overallPercent, minimum);
    })

    selectElem.addEventListener('change', (e) => {
        let day = selectElem.value;
        let dayInd = days.indexOf(day);
        let elems = document.getElementById("rosters").children;
        if(day != 'nan') {
            for(let i = 0; i < elems.length; i++) {
                let elem = elems[i];
                if(elem.id == day + "Table") {
                    if(elem.classList.contains('hidden')) elem.classList.remove('hidden');
                    continue;
                } else {
                    if(!elem.classList.contains('hidden')) elem.classList.add('hidden');
                }
                // console.log(dayInd);
                let correspondingDay = daysFull[dayInd];
                currentDay = correspondingDay;
                // console.log(correspondingDay);
                let percent = Intl.NumberFormat('default', {
            style: 'percent',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
          }).format(roster[correspondingDay.toLowerCase()].attendancePercent);
                document.getElementById("dayPercent").innerHTML = `${correspondingDay}: ${percent}`;
            }
        } else {
            document.getElementById("dayPercent").innerHTML = '';
            for(let i = 0; i < elems.length; i++) {
                let elem = elems[i];
                if(elem.classList.contains('hidden')) elem.classList.remove('hidden');
                continue;
            }
            currentDay = '';
        }
    })

    function changeWarning(percent, min) {
        let warn = document.getElementById("minWarning");
        console.log(percent)
        if(percent < min) {
            if(minWarning.classList.contains("hidden")) minWarning.classList.remove("hidden");
        } else {
            if(!minWarning.classList.contains("hidden")) minWarning.classList.add("hidden");
        }
    }

    async function changeAttendance(elem, day, timePeriod, section = 0) {
        let attending = true;
        if(elem.classList.contains('bg-green-300')) {
            elem.classList.remove('bg-green-300');

            elem.classList.add('bg-red-300');
            attending = false;
        } else if(elem.classList.contains('bg-red-300')) {
            elem.classList.remove('bg-red-300');

            elem.classList.add('bg-green-300');
            attending = true;
        } 
        // let obj = (currentDay != '') ? roster[currentDay.toLowerCase()] : roster;
        // let currentPercent = obj.attendancePercent;
        // let percentShare = 1;
        // if(currentDay == '') {

        // }
        // percentShare /= (currentDay != '') ? obj.allShifts.length : obj.days.length;
        // console.log("Current Percentage: " + currentPercent);
        // percentShare *= (attending) ? 1 : -1;
        // console.log("New Percentage: " + (currentPercent + percentShare));
        // console.log("Percent Share: " + percentShare);
        let name = elem.querySelector('#name').innerHTML;
        console.log(name);

        document.getElementById("percent").innerHTML = `...`;
        if (currentDay != '') {
            document.getElementById("dayPercent").innerHTML = `...`;
        }

        let url = `/changeAttendance?name=${name}&day=${day}&timePeriod=${timePeriod}&section=${section}&attendanceStatus=${attending}`;
        let json = await fetch(url).then(response => response.json()).then(response => response);
        
        console.log(json);

        let dPer = Intl.NumberFormat('default', {
            style: 'percent',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
          }).format(json.dayPercent);
          
        let rPer = Intl.NumberFormat('default', {
            style: 'percent',
            minimumFractionDigits: 2,
            maximumFractionDigits: 2,
          }).format(json.rosterPercent);

        let currDay = daysFull[json.dayNum-1];

        if(currentDay != '') {
            document.getElementById("dayPercent").innerHTML = `${currDay}: ${dPer}`;
        }

        roster.attendancePercent = json.rosterPercent;
        roster[currDay.toLowerCase()].attendancePercent = json.dayPercent;

        document.getElementById("percent").innerHTML = `${rPer} Attendance`;

        
        changeWarning(roster.attendancePercent, minimum);

        // console.log(`Day ${day}, Time Period: ${timePeriod}, Section: ${section}`);
    }
    </script>
</body>
</html>
